[{"D:\\PROGRAMMING\\Reactjs\\App_Projects\\Shopping Cart\\shoppingcart-client\\src\\index.js":"1","D:\\PROGRAMMING\\Reactjs\\App_Projects\\Shopping Cart\\shoppingcart-client\\src\\reportWebVitals.js":"2","D:\\PROGRAMMING\\Reactjs\\App_Projects\\Shopping Cart\\shoppingcart-client\\src\\App.js":"3","D:\\PROGRAMMING\\Reactjs\\App_Projects\\Shopping Cart\\shoppingcart-client\\src\\components\\cart.js":"4","D:\\PROGRAMMING\\Reactjs\\App_Projects\\Shopping Cart\\shoppingcart-client\\src\\components\\main.js":"5","D:\\PROGRAMMING\\Reactjs\\App_Projects\\Shopping Cart\\shoppingcart-client\\src\\components\\Cart.js":"6","D:\\PROGRAMMING\\Reactjs\\App_Projects\\Shopping Cart\\shoppingcart-client\\src\\components\\Main.js":"7","D:\\PROGRAMMING\\Reactjs\\App_Projects\\Shopping Cart\\shoppingcart-client\\src\\datas\\productData.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1047,"mtime":1608017026611,"results":"12","hashOfConfig":"10"},{"size":821,"mtime":1607935705523,"results":"13","hashOfConfig":"10"},{"size":1949,"mtime":1607935770429,"results":"14","hashOfConfig":"10"},{"size":3244,"mtime":1608024275806,"results":"15","hashOfConfig":"10"},{"size":2432,"mtime":1608023966574,"results":"16","hashOfConfig":"10"},{"size":2141,"mtime":1608007861190,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1vfve4s",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\PROGRAMMING\\Reactjs\\App_Projects\\Shopping Cart\\shoppingcart-client\\src\\index.js",[],["38","39"],"D:\\PROGRAMMING\\Reactjs\\App_Projects\\Shopping Cart\\shoppingcart-client\\src\\reportWebVitals.js",[],"D:\\PROGRAMMING\\Reactjs\\App_Projects\\Shopping Cart\\shoppingcart-client\\src\\App.js",[],"D:\\PROGRAMMING\\Reactjs\\App_Projects\\Shopping Cart\\shoppingcart-client\\src\\components\\cart.js",[],"D:\\PROGRAMMING\\Reactjs\\App_Projects\\Shopping Cart\\shoppingcart-client\\src\\components\\main.js",[],"D:\\PROGRAMMING\\Reactjs\\App_Projects\\Shopping Cart\\shoppingcart-client\\src\\components\\Cart.js",["40","41","42","43","44","45"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Cart(props) {\r\n  const { proData, productInCart, setProductInCart } = props;\r\n  const [cartDatas, setCardDatas] = useState([]);\r\n\r\n  let totalAll = 0;\r\n\r\n  const changeAmount = (productId, changeNumber) => {\r\n    setProductInCart(\r\n        productInCart.map((cdata) =>\r\n          cdata.id === productId\r\n            ? {\r\n                ...cdata,\r\n                amount: cdata.amount + changeNumber,\r\n              }\r\n            : cdata\r\n        )\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    let cartData = [];\r\n    proData.map((data) => {\r\n      productInCart.map((pro) => {\r\n        let totalPrice = data.text * pro.amount;\r\n        if (data.id === pro.id) {\r\n          cartData.push({ ...data, amount: pro.amount, total: totalPrice });\r\n        }\r\n      });\r\n    });\r\n    setCardDatas(cartData);\r\n  }, [productInCart]);\r\n  useEffect(()=>{\r\n    cartDatas.map((cds)=>{\r\n        totalAll = totalAll + cds.total\r\n    })\r\n  },[cartDatas])\r\n  return (\r\n    //Navbar\r\n    <div>\r\n      <nav\r\n        className=\"navbar navbar-expand-sm bg-dark navbar-dark\"\r\n        style={{ fontSize: \"20px\" }}\r\n      >\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/\">\r\n              <h4 className=\"nav-link\">Home</h4>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\" style={{ marginLeft: \"1300px\" }}>\r\n            <Link to=\"/cart\">\r\n              <h4 className=\"nav-link\" style={{ color: \"white\" }}>\r\n                Cart\r\n              </h4>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <h1>Your Cart: </h1>\r\n      <table className=\"table\" style={{ textAlign: \"center\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Image</th>\r\n            <th>Price</th>\r\n            <th>Amount</th>\r\n            <th>Total Price</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {cartDatas.map((data) => {\r\n            return (\r\n              <tr key={data.id}>\r\n                <td>{data.title}</td>\r\n                <td>\r\n                  <img\r\n                    style={{ width: \"100px\" }}\r\n                    src={data.src}\r\n                  />\r\n                </td>\r\n                <td>{data.text}$</td>\r\n                <td>\r\n                  <button\r\n                    onClick={() => data.amount > 0 ? changeAmount(data.id, -1): null}\r\n                  >\r\n                    -{\" \"}\r\n                  </button>{\" \"}\r\n                  {data.amount}{\" \"}\r\n                  <button\r\n                    onClick={() => {\r\n                      changeAmount(data.id, 1);\r\n                    }}\r\n                  >\r\n                    +{\" \"}\r\n                  </button>\r\n                </td>\r\n                <td>{data.total}$</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n        <tfoot>\r\n        {/* <tr>\r\n            <th></th>\r\n            <th></th>\r\n            <th></th>\r\n            <th></th>\r\n            <th>\r\n                {totalAll}\r\n            </th>\r\n          </tr> */}\r\n        </tfoot>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","D:\\PROGRAMMING\\Reactjs\\App_Projects\\Shopping Cart\\shoppingcart-client\\src\\components\\Main.js",["46","47"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Main(props) {\r\n    const {proData,productInCart, setProductInCart} = props;\r\n\r\n    const addToCart = (productId, productName, productAmount) => {\r\n        let cartValue = {id: productId, amount: productAmount};\r\n        let cart = [...productInCart];\r\n        // if (cart.length == 0) {\r\n        //     cart.push(cartValue);\r\n        // }\r\n        let exitsProduct = cart.some(ele => ele.id === cartValue.id);\r\n        if (!exitsProduct) {\r\n            cart.push(cartValue);\r\n        }else{\r\n            cart.map((c)=>{\r\n                if (c.id === cartValue.id) {\r\n                    return c.amount++;\r\n                }\r\n            })\r\n        }\r\n        setProductInCart(cart);\r\n        alert(`${productName} has been add to Cart`)\r\n    }\r\n\r\n\r\n    return (\r\n<div>\r\n    <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\" style={{fontSize:'20px'}}>\r\n        <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/\">\r\n                    <h4 className=\"nav-link\" style={{color:\"white\"}}>Home</h4>\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\" style={{marginLeft:\"1300px\"}}>\r\n                <Link to=\"/cart\">\r\n                    <h4 className=\"nav-link\">Cart</h4>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n    <h2>Choose Your Product:</h2>\r\n    <div className=\"row\" style={{marginLeft:\"40px\", marginTop:\"50px\"}}>\r\n        {\r\n            proData.map((data)=>{\r\n                return(\r\n                <div key={data.id} className=\"card\" style={{width:\"300px\", marginLeft:\"50px\", marginTop:\"30px\"}}>\r\n                    <img className=\"card-img-top\" style={{height:\"250px\"}} src={data.src}/>\r\n                    <div className=\"card-body\" style={{textAlign:\"center\"}}>\r\n                        <h4 className=\"card-title\">{data.title}</h4>\r\n                        <h6 className=\"card-text\">Price: {data.text}$</h6>\r\n                    </div>\r\n                    <div className=\"card-footer\"  style={{textAlign:\"center\"}}>\r\n                        <button onClick={() => addToCart(data.id, data.title, data.amount)} className=\"btn btn-success\">Add To Cart</button>\r\n                    </div>\r\n                </div>\r\n                )\r\n            })\r\n        }\r\n        \r\n    </div> \r\n</div>\r\n    );\r\n}\r\n\r\nexport default Main;",["48","49"],"D:\\PROGRAMMING\\Reactjs\\App_Projects\\Shopping Cart\\shoppingcart-client\\src\\datas\\productData.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":25,"column":24,"nodeType":"56","messageId":"57","endLine":25,"endColumn":26},{"ruleId":"54","severity":1,"message":"55","line":26,"column":31,"nodeType":"56","messageId":"57","endLine":26,"endColumn":33},{"ruleId":"58","severity":1,"message":"59","line":34,"column":6,"nodeType":"60","endLine":34,"endColumn":21,"suggestions":"61"},{"ruleId":"54","severity":1,"message":"55","line":36,"column":24,"nodeType":"56","messageId":"57","endLine":36,"endColumn":26},{"ruleId":"58","severity":1,"message":"62","line":37,"column":20,"nodeType":"63","endLine":37,"endColumn":40},{"ruleId":"64","severity":1,"message":"65","line":79,"column":19,"nodeType":"66","endLine":82,"endColumn":21},{"ruleId":"54","severity":1,"message":"67","line":17,"column":25,"nodeType":"56","messageId":"68","endLine":17,"endColumn":27},{"ruleId":"64","severity":1,"message":"65","line":50,"column":21,"nodeType":"66","endLine":50,"endColumn":92},{"ruleId":"50","replacedBy":"69"},{"ruleId":"52","replacedBy":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'proData'. Either include it or remove the dependency array.","ArrayExpression",["73"],"Assignments to the 'totalAll' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","BinaryExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["71"],["72"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [proData, productInCart]",{"range":"76","text":"77"},[913,928],"[proData, productInCart]"]